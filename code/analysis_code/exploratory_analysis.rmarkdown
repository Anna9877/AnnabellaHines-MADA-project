---

title: "Data Cleaning and Exploratory Analysis"

author: "Annabella Hines"

date: "2023-02-24"

output: html_document

---




# Setup




```{r}

#load needed packages. make sure they are installed.

library(here) #for data loading/saving

library(dplyr)

library(skimr)

library(ggplot2)

```






## Load the data.




```{r}

#Path to data.

life_data_location <- here::here("data","processed_data","processeddata_life.rds")

risk_data_location <- here::here("data","processed_data","processeddata_risk.rds")

#load data

life <- readRDS(life_data_location)

risk <- readRDS(risk_data_location)

```






# Data exploration through tables



First we'll use some code to produce and save a summary table for each data set.




```{r}

summary_lifeexp <- skimr::skim(life)

print(summary_lifeexp)

summary_riskfactor <- skimr::skim(risk)

print(summary_riskfactor)

# save to file

summarytable_lifeexp = here("results", "summarytablelifeexp.rds")

saveRDS(summary_lifeexp, file = summarytable_lifeexp)

summarytable_riskfactor = here("results", "summarytableriskfactor.rds")

saveRDS(summary_riskfactor, file = summarytable_riskfactor)

```






# Data exploration through figures



First a quick look at Adult mortality and infant mortality plotted against life expectancy.


```{r}

##Plot of adult mortality vs life expectancy with point size correlated to infant deaths and color to status of country

ggplot(life, aes(x=Adult.Mortality, y=Life.expectancy, size=Infant.deaths, color=Status))+geom_point()+geom_jitter()

#Same variables but for the year 2000

filter(life, Year==2000) %>% ggplot(aes(x=Adult.Mortality, y=Life.expectancy, size=Infant.deaths, color=Status))+geom_point()+geom_jitter()

#Same variables but for 2015

filter(life, Year==2015) %>% ggplot(aes(x=Adult.Mortality, y=Life.expectancy, color=Status, size=Infant.deaths))+geom_point()+geom_jitter()

```


The trends appear to have stayed fairly consistent throughout the period with a higher life expectancy associated with lower adult and infant mortality and being classified as a developed nation.




```{r}

combo <- right_join(life, risk, by="Country")

filter(combo, Year.x==2015) %>% ggplot(aes(x=Air.pollution, y=Life.expectancy))+geom_point()

```


```{r}

p1 <- life %>% filter(Year==2000) %>% ggplot(aes(x=Status, y=Life.expectancy)) + geom_boxplot() 

plot(p1)

figure_file = here("results","LifeExpectancyStatusBoxPlot.png")

ggsave(filename = figure_file, plot=p1) 

```




```{r}

p2 <- ggplot(riskUS, aes(x=Year))+
  geom_point(aes(y=Unsafe.sanitation), color="blue")+
  geom_point(aes(y=Unsafe.water.source),color="darkgreen")+
  ylab("Deaths Due to Unsafe Water Source, Unsafe Sanitation, or No Access to Handwashing Facilities in the US")+
  geom_point(aes(y=No.access.to.handwashing.facility), color="red")

plot(p2)

figure_file = here("results","weight_distribution.png")

ggsave(filename = figure_file, plot=p2) 

```







```{r}

p3 <- mydata %>% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')

plot(p3)

figure_file = here("results","height_weight.png")

ggsave(filename = figure_file, plot=p3) 

```




Once more height as function of weight, stratified by gender. Note that there is so little data, it's a bit silly. But we'll plot it anyway.




```{r}

p4 <- mydata %>% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')

plot(p4)

figure_file = here("results","height_weight_stratified.png")

ggsave(filename = figure_file, plot=p4) 

```








# Notes



For your own explorations, tables and figures can be "quick and dirty". As long as you can see what's going on, there is no need to polish them. That's in contrast to figures you'll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible.






